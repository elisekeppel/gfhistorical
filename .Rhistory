?save.rda
?saverda
# define spp of interest
spp <- 403
# get all records of the spp being caught
dat <- gfdata:::get_historical_catch(403)
file <- paste0("data/", spp,"_historical_catch.rda")
save(dat, file)
save(dat, file = file)
load("D:/GitHub/gfhistorical/data/403_historical_catch.rda")
rm(dat)
load("D:/GitHub/gfhistorical/data/403_historical_catch.rda")
if(!exists(file)){
d <- gfdata:::get_historical_catch(403)
save(dat, file = file)
}
rm(dat)
load("D:/GitHub/gfhistorical/data/403_historical_catch.rda")
exists(data(file, package ="gfhistory"))
devtools::load_all(".")
exists(data(file, package ="gfhistory"))
if(!exists(data(file, package ="gfhistorical"))){
d <- gfdata:::get_historical_catch(403)
save(dat, file = file)
}
if(!exists(data(file, package ="gfhistorical"))){
d <- gfdata:::get_historical_catch(403)
save(dat, file = file)
}
devtools::load_all(".")
usethis::edit_r_profile()
if (interactive()) {
suppressMessages(require(devtools))
suppressMessages(require(usethis))
suppressMessages(require(testthat))
}
usethis::edit_r_profile(options(
warnPartialMatchArgs = TRUE,
warnPartialMatchDollar = TRUE,
warnPartialMatchAttr = TRUE
))
usethis::edit_r_profile(if (interactive()) {
suppressMessages(require(devtools))
suppressMessages(require(usethis))
suppressMessages(require(testthat))
})
usethis::edit_r_profile(
suppressMessages(require(devtools))
suppressMessages(require(usethis))
suppressMessages(require(testthat))
)
usethis::edit_r_profile(
require(devtools)
require(usethis)
require(testthat)
)
library(usethis)
usethis::edit_r_profile(if (interactive()) {
suppressMessages(require(devtools))
suppressMessages(require(usethis))
suppressMessages(require(testthat))
})
usethis::edit_r_profile(options(
warnPartialMatchArgs = TRUE,
warnPartialMatchDollar = TRUE,
warnPartialMatchAttr = TRUE
))
# define spp of interest
spp <- 403
# get all records of the spp being caught
file <- paste0(spp,"_historical_catch.rda")
if(!exists(data(file, package ="gfhistorical"))){
d <- gfdata:::get_historical_catch(403)
save(dat, file = file)
}
getwd()
library(gfhistorical)
library(magrittr)
# define spp of interest
spp <- 403
# get all records of the spp being caught
dat <- gfdata:::get_historical_catch(403)
d <- dat
d$fishery_sector <- tolower(d$fishery_sector)
# group fishery sectors
d <- d %>% mutate(
fishery_sector = case_when(
fishery_sector %in% c("rockfish inside", "rockfish outside", "zn", "k/zn") ~ "hlrock",
fishery_sector %in% c("halibut", "k/l", "halibut and sablefish") ~ "halibut",
fishery_sector %in% c("spiny dogfish", "lingcod", "schedule ii") ~ "dogling",
fishery_sector %in% c("groundfish trawl") ~ "trawl",
fishery_sector %in% c("sablefish") ~ "sable",
fishery_sector %in% c("foreign") ~ "foreign"
))
fishery <- unique(d$fishery_sector)
library(dplyr)
# group fishery sectors
d <- d %>% mutate(
fishery_sector = case_when(
fishery_sector %in% c("rockfish inside", "rockfish outside", "zn", "k/zn") ~ "hlrock",
fishery_sector %in% c("halibut", "k/l", "halibut and sablefish") ~ "halibut",
fishery_sector %in% c("spiny dogfish", "lingcod", "schedule ii") ~ "dogling",
fishery_sector %in% c("groundfish trawl") ~ "trawl",
fishery_sector %in% c("sablefish") ~ "sable",
fishery_sector %in% c("foreign") ~ "foreign"
))
fishery <- unique(d$fishery_sector)
major <- c("01", "03", "04", "05", "06", "07", "08", "09")
# filter for trusted modern years and appropriate major areas (these are
# defaults from PBStools - should be discussed and adjusted for individual
# species or species groups)
hl_yr <- 1986
halibut_yr <- 2000
dogling_yr <- 2007
trawl_yr <- 1996
sable_yr <- 2007
modern_catch <- d %>% filter(
(fishery_sector == "hlrock" & year >= hl_yr) |
(fishery_sector == "halibut" & year >= halibut_yr) |
(fishery_sector == "dogling" & year >= dogling_yr) |
(fishery_sector == "trawl" & year >= trawl_yr) |
(fishery_sector == "sable" & year >= sable_yr)
) %>%
filter(major_stat_area_code %in% major)
# calculate average wt/pc by fishery_sector, major area and year for modern data
avg_wt_modern <- modern_catch %>%
select(year, fishery_sector, major_stat_area_code, landed_kg, landed_pcs) %>%
filter(landed_kg > 0 & landed_pcs >0) %>%
group_by(year, fishery_sector, major_stat_area_code) %>%
summarise(landed_kg_per_pc = mean(landed_kg/landed_pcs))
# calculate overall average wt/pc by fishery_sector and major area to apply to
# all historical data
avg_wt_overall <- modern_catch %>%
select(year, fishery_sector, major_stat_area_code, landed_kg, landed_pcs) %>%
filter(landed_kg > 0 & landed_pcs >0) %>%
group_by(year, fishery_sector, major_stat_area_code) %>%
summarise(landed_kg_per_pc = mean(landed_kg/landed_pcs))
modern_catch_sum <- modern_catch %>%
group_by(fishery_sector, major_stat_area_code, year) %>%
summarise(sum_landed_kg = sum(landed_kg))
# ref years for each fishery
# TO DO: shouldn't these align with (be after) trusted
# years for modern_catch, above? (and differ by fishery?)
hlrock_ref_yrs <- 1997:2005
halibut_ref_yrs <- 1997:2005
dogling_ref_yrs <- 1997:2005
trawl_ref_yrs <- 1997:2005
sable_ref_yrs <- 1997:2005
modern_catch_by_area_and_fishery <- modern_catch %>%
filter(
(fishery_sector == "hlrock" & year %in% hlrock_ref_yrs) |
(fishery_sector == "halibut" & year %in% halibut_ref_yrs) |
(fishery_sector == "dogling" & year %in% dogling_ref_yrs) |
(fishery_sector == "trawl" & year %in% trawl_ref_yrs) |
(fishery_sector == "sable" & year %in% sable_ref_yrs)
) %>%
group_by(fishery_sector, major_stat_area_code, major_stat_area_name) %>%
summarise(landed_kg = sum(landed_kg), discarded_kg = sum(discarded_kg))
# list of rockfish species excluding POP
# TO DO: should we also exclude spp of interest in ORF?
orf_spp <- function(){
d <- run_sql("GFFOS","SELECT SPECIES_CODE
FROM SPECIES
WHERE SPECIES_COMMON_NAME LIKE ('%ROCKFISH%')
OR SPECIES_SCIENTIFIC_NAME LIKE ('%SEBASTES%')")
names(d) <- tolower(names(d))
d <- d %>% filter(species_code > 300) %>%
filter(!species_code %in% c(396))
d <- d$species_code
}
View(modern_catch)
modern_catch <- modern_catch %>%
for(i in fishery){
for(j in major){
case_when(landed_kg = 0, landed_kg = landed_pcs * avg_wt_modern[fishery_sector = i, "major_stat_area_code" = j])
}
?case_when
modern_catch <- modern_catch %>%
for(i in fishery){
test = 0
}
modern_catch <- modern_catch %>%
for(i in fishery){
if(fishery == i){test = 0}
}
modern_catch <- modern_catch %>%
for(i in fishery){
if(fishery_sector == i){test = 0}
}
